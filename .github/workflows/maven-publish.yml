# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GAMEDOORA_PKGS }}
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
#     - name: Download Maven
#       run: |
#         curl -sL https://www-eu.apache.org/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.zip -o maven.zip
#         apt-get update
#         apt-get -y install unzip
#         unzip -d /usr/share maven.zip
#         rm maven.zip
#         ln -s /usr/share/apache-maven-3.6.3/bin/mvn /usr/bin/mvn
#         echo "M2_HOME=/usr/share/apache-maven-3.6.3" | tee -a /etc/environment

    - name: Version bump for pom.xml
      run: mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.nextMinorVersion} versions:commit --file pom.xml

    - name: Update versions for latest libraries
      run: |
          echo "GIT_TAG=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
          echo "$(cat ~/.m2/settings.xml)"
    - name: Build with Maven
      run: mvn -B package --file pom.xml --settings ~/.m2/settings.xml

    - name: Deploy to Repsy
      run: mvn -e -X --settings settings.xml -Drepo.id=repsy -Drepo.login=${{secrets.USER}} -Drepo.pwd=${{secrets.PASS}}  deploy 
    - name: Commit files
      run: |
        git config --local user.email "revision-updater@gamedoora.com"
        git config --local user.name "Version Upgrader"
        git commit -m "Version upgrade" -a
        echo "TAG = $GIT_TAG"
        git tag "$GIT_TAG"
        git push origin main
        git push origin "$GIT_TAG"
      env:
       repo-token: ${{ secrets.GITHUB_TOKEN }}

